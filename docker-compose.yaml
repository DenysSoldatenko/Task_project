networks:
  app-network:
    driver: bridge

volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local
  minio_data:
    driver: local

services:
  app:
    build:
      context: .
    container_name: task_project
    networks:
      - app-network
    depends_on:
      - postgres
      - minio
      - redis
    env_file:
      - .env
    ports:
      - '8080:8080'
    environment:
      MINIO_URL: http://minio:9000
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATASOURCE_HOST: postgres

  postgres:
    image: postgres:15.1-alpine
    container_name: postgres
    networks:
      - app-network
    environment:
       POSTGRES_USER: ${DATASOURCE_USERNAME}
       POSTGRES_PASSWORD: ${DATASOURCE_USERNAME}
       POSTGRES_DB: ${DATASOURCE_DATABASE}
    ports:
      - '5432:5432'
    volumes:
      - ./src/main/resources/preliquibase/init-database.sql:/docker-entrypoint-initdb.d/init-database.sql
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7.2-rc-alpine
    restart: always
    container_name: redis
    networks:
      - app-network
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis_data:/data

  minio:
    image: minio/minio:latest
    container_name: minio
    networks:
      - app-network
    environment:
       MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
       MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    command: server ~/minio --console-address :9090
    ports:
      - '9090:9090'
      - '9000:9000'
    volumes:
      - minio_data:/minio