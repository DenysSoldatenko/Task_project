type Query {
    getProjectByName(projectName: String!): ProjectDto!
    getTeamsForProject(projectName: String!): [ProjectTeamDto!]!

    getAllRoles: [RoleDto!]!
    getRoleByName(roleName: String!): RoleDto!
    getRoleHierarchy(roleName: String!): RoleHierarchyListDto!
}

type Mutation {
    createProject(projectDto: ProjectInput!): ProjectDto!
    updateProject(projectName: String!, projectDto: ProjectInput!): ProjectDto!
    deleteProject(projectName: String!): Boolean
    addTeamToProject(projectName: String!, projectTeamDtoList: [ProjectTeamInput!]!): ProjectDto!

    createRole(roleDto: RoleInput!): RoleDto!
    updateRole(roleName: String!, roleDto: RoleInput!): RoleDto!
    deleteRole(roleName: String!): Boolean
    createRoleHierarchies(roleHierarchyDtoList: [RoleHierarchyInput!]!): [RoleHierarchyDto!]!
    deleteRoleHierarchies(roleHierarchyDtoList: [RoleHierarchyInput!]!): Boolean
}