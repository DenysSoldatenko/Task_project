query GetProjectByName {
    getProjectByName(projectName: "New Project") {
        id
        name
        description
        creator {
            id
            fullName
            username
            slug
            image
        }
    }
}

query GetTeamsForProject {
    getTeamsForProject(projectName: "New Project") {
        team {
            id
            name
            description
            creator {
                id
                fullName
            }
        }
        project {
            id
            name
        }
    }
}

mutation CreateProject {
    createProject(projectDto: {
        name: "New Project"
        description: "This is a new project created via GraphQL."
        creator: {
            id: 1 # <YOUR_ID>
            username: "alice12345@gmail.com"
        }
    }) {
        id
        name
        description
        creator {
            id
            fullName
        }
    }
}

mutation UpdateProject {
    updateProject(
        projectName: "New Project"
        projectDto: {
            name: "Updated Project Name"
            description: "Updated project description."
            creator: {
                id: 1 # <YOUR_ID>
                username: "alice12345@gmail.com"
            }
        }
    ) {
        id
        name
        description
    }
}

mutation DeleteProject {
    deleteProject(projectName: "New Project")
}

mutation AddTeamToProject {
    addTeamToProject(
        projectName: "New Project"
        projectTeamDtoList: [
            {
                team: {
                    name: "New Team"
                    description: "Handles backend logic"
                    creator: {
                        id: 1 # <YOUR_ID>
                        username: "alice12345@gmail.com"
                    }
                }
                project: {
                    name: "New Project"
                    description: "Updated project description"
                    creator: {
                        id: 1 # <YOUR_ID>
                        username: "alice12345@gmail.com"
                    }
                }
            }
        ]
    ) {
        id
        name
        description
    }
}



query GetAllRoles {
    getAllRoles {
        name
        description
    }
}

query GetRoleByName {
    getRoleByName(roleName: "PRODUCT_OWNER2") {
        name
        description
    }
}

query GetRoleHierarchy {
    getRoleHierarchy(roleName: "PRODUCT_OWNER2") {
        name
        higherRoles {
            name
        }
        lowerRoles {
            name
        }
    }
}

mutation CreateRole {
    createRole(roleDto: {
        name: "PRODUCT_OWNER2"
        description: "Product Owner2 responsible for product vision and requirements"
    }) {
        name
        description
    }
}

mutation UpdateRole {
    updateRole(
        roleName: "PRODUCT_OWNER2"
        roleDto: {
            name: "PRODUCT_OWNER2"
            description: "Updated description for Product Owner2"
        }
    ) {
        name
        description
    }
}

mutation DeleteRole {
    deleteRole(roleName: "PRODUCT_OWNER2")
}

mutation CreateRoleHierarchies {
    createRoleHierarchies(roleHierarchyDtoList: [
        {
            higherRole: {
                name: "PRODUCT_OWNER2"
                description: "Product Owner2 responsible for product vision and requirements"
            }
            lowerRole: {
                name: "SCRUM_MASTER"
                description: "Scrum Master ensuring agile practices and team coordination"
            }
        }
        {
            higherRole: {
                name: "PRODUCT_OWNER"
                description: "Product Owner responsible for product vision and requirements"
            }
            lowerRole: {
                name: "TEAM_LEAD"
                description: "Team leader, overseeing team members"
            }
        }
    ]) {
        higherRole {
            name
            description
        }
        lowerRole {
            name
            description
        }
    }
}

mutation DeleteRoleHierarchies {
    deleteRoleHierarchies(roleHierarchyDtoList: [
        {
            higherRole: {
                name: "PRODUCT_OWNER2"
                description: "Product Owner2 responsible for product vision and requirements"
            }
            lowerRole: {
                name: "SCRUM_MASTER"
                description: "Scrum Master ensuring agile practices and team coordination"
            }
        }
        {
            higherRole: {
                name: "PRODUCT_OWNER"
                description: "Product Owner responsible for product vision and requirements"
            }
            lowerRole: {
                name: "TEAM_LEAD"
                description: "Team leader, overseeing team members"
            }
        }
    ])
}







