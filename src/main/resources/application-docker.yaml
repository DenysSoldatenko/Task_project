spring:
  application:
    name: "application"
    version: 0.0.1-SNAPSHOT
  banner:
    location: application-banner.txt
  config:
    import: optional:file:.env[.properties]
  data:
    jdbc:
      repositories:
        enabled: false
  datasource:
    url: jdbc:postgresql://${DOCKER_DATASOURCE_HOST}:5432/${DOCKER_DATASOURCE_DATABASE}?currentSchema=${DOCKER_DATASOURCE_SCHEMA}
    username: ${DOCKER_DATASOURCE_USERNAME}
    password: ${DOCKER_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  liquibase:
    change-log: classpath:liquibase/db.changelog.yaml
    enabled: true
    default-schema: task_list
  graphql:
    graphiql:
      enabled: true
  jpa:
    open-in-view: false
  kafka:
    bootstrap-servers: ${DOCKER_BOOTSTRAP_SERVER}
    topic:
      name: "achievement-topic"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: achievement_group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: '*'

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${DOCKER_KEYCLOAK_ISSUER_URI}
      client:
        provider:
          keycloak:
            issuer-uri: ${DOCKER_KEYCLOAK_ISSUER_URI}
            authorization-uri: ${DOCKER_KEYCLOAK_AUTH_URI}
            token-uri: ${DOCKER_KEYCLOAK_TOKEN_URI}
            jwk-set-uri: ${DOCKER_KEYCLOAK_JWK_SET_URI}

keycloak:
  admin-server-url: ${DOCKER_KEYCLOAK_ADMIN_SERVER_URL}
  admin-realm: ${DOCKER_KEYCLOAK_ADMIN_REALM}
  target-realm: ${DOCKER_KEYCLOAK_TARGET_REALM}
  admin-client-id: ${DOCKER_KEYCLOAK_ADMIN_CLIENT_ID}
  admin-username: ${DOCKER_KEYCLOAK_ADMIN_USERNAME}
  admin-password: ${DOCKER_KEYCLOAK_ADMIN_PASSWORD}

minio:
  bucket: ${DOCKER_MINIO_BUCKET}
  url: ${DOCKER_MINIO_URL}
  accessKey: ${DOCKER_MINIO_ACCESS_KEY}
  secretKey: ${DOCKER_MINIO_SECRET_KEY}

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    prometheus:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
  prometheus:
    metrics:
      export:
        enabled: true

springdoc:
  override-with-generic-response: false
  oauth2:
    authorization-url: ${DOCKER_KEYCLOAK_AUTH_URI}
    token-url: ${DOCKER_KEYCLOAK_TOKEN_URI}
  swagger-ui:
    oauth:
      client-id: ${DOCKER_KEYCLOAK_CLIENT_ID}
      client-secret: ${DOCKER_KEYCLOAK_CLIENT_SECRET}
